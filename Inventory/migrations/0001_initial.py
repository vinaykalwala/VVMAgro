# Generated by Django 5.2.1 on 2025-05-24 05:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location', models.CharField(default='Hyderabad, Telangana', max_length=100)),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('internship', 'Internship'), ('contract', 'Contract')], default='full_time', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PartyGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('location', models.TextField()),
                ('code', models.CharField(max_length=20, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('resume', models.FileField(upload_to='resumes/')),
                ('cover_letter', models.TextField(blank=True)),
                ('portfolio_link', models.URLField(blank=True, null=True)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='Inventory.job')),
            ],
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('gstin_uin_number', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('location', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('state', models.CharField(max_length=20)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Inventory.partygroup')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price_per_unit', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('unit_of_measurement', models.CharField(max_length=50)),
                ('stock_quantity', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('hsn_sac', models.CharField(help_text='Enter HSN or SAC code', max_length=20)),
                ('hsn_sac_details', models.TextField(blank=True, help_text='Detailed information about the HSN/SAC code')),
                ('hsn_sac_source_of_details', models.CharField(blank=True, help_text='Source from where HSN/SAC info was obtained', max_length=255)),
                ('hsn_sac_description', models.TextField(blank=True, help_text='Description for the HSN/SAC code')),
                ('gst_applicable', models.BooleanField(default=False, help_text='Check if GST is applicable')),
                ('gst_rate_details', models.TextField(blank=True, help_text='Details or notes about the GST rate applied')),
                ('gst_source_of_details', models.CharField(blank=True, help_text='Source from where GST info was obtained', max_length=255)),
                ('cgst_percent', models.DecimalField(blank=True, decimal_places=2, default=9.0, max_digits=5, null=True)),
                ('sgst_percent', models.DecimalField(blank=True, decimal_places=2, default=9.0, max_digits=5, null=True)),
                ('freight_applicable', models.BooleanField(default=False)),
                ('freight_charge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('type_of_supply', models.CharField(choices=[('goods', 'Goods'), ('raw_material', 'Raw Material')], max_length=20)),
                ('phase', models.CharField(blank=True, choices=[('phase_1', 'Phase 1'), ('phase_2', 'Phase 2'), ('phase_3', 'Phase 3')], max_length=20, null=True)),
                ('rate_of_duty', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='Inventory.productgroup')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='Inventory.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voucher_number', models.CharField(blank=True, max_length=30, unique=True)),
                ('voucher_type', models.CharField(choices=[('Buyer_Voucher', 'Buyer_Voucher'), ('Seller_Voucher', 'Seller_Voucher'), ('Job_Work_Voucher', 'Job_Work_Voucher'), ('Quotation', 'Quotation'), ('Delivery_Challan', 'Delivery_Challan')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('igst_applicable', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('place_of_supply', models.CharField(blank=True, max_length=100, null=True)),
                ('freight_applicable', models.BooleanField(default=False)),
                ('freight_charge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_subtotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_cgst', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_sgst', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_igst', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('grand_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Inventory.party')),
            ],
        ),
        migrations.CreateModel(
            name='VoucherProductItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('in', 'In'), ('out', 'Out'), ('job_work', 'Job Work')], max_length=10)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=15)),
                ('cgst_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('sgst_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('igst_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Inventory.product')),
                ('voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='Inventory.voucher')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Inventory.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('user', 'User')], default='user', max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('original_password', models.CharField(max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
